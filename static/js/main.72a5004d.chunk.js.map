{"version":3,"sources":["contexts/CustomerContext.js","contexts/UserContext.js","data/UserKit.js","components/styles.jsx","components/LoginButton.jsx","components/LogoutButton.jsx","components/HomeButton.jsx","components/UserBox.jsx","components/Navigation.jsx","pages/LoginPage.jsx","pages/ActivatePage.jsx","components/CustomerDetail.jsx","components/validation.js","components/EditCutomerDetail.jsx","pages/CustomerDetailPage.jsx","components/CustomerForm.jsx","pages/HomePage.jsx","pages/RegisterPage.jsx","pages/ProfilePage.jsx","App.js","serviceWorker.js","index.js"],"names":["CustomerContext","createContext","UserContext","ROOT_URL","firstName","lastName","email","password","organisationName","organisationKind","url","payload","fetch","method","headers","this","getPuplicHeaders","body","JSON","stringify","uid","token","getPrivateHeaders","id","getToken","localStorage","setItem","getItem","removeItem","MainDiv","styled","div","H1","h1","H2","h2","DivCenterColumn","props","white","marginTop","Input","input","Button","button","NavDiv","DivCenterRow","NavButton","CustomerLI","li","a","CustomerUL","ul","DivCustomerGrid","ShowCreateDiv","CreateCustomerDiv","H4","h4","CreateCustomerInput","CreateCustomerButton","LoginButton","BigButton","P","p","warning","history","useHistory","onClick","push","LogoutButton","clear","HomeButton","UserBox","userKit","UserKit","useContext","setUserInfo","userInfo","useEffect","getUserInfo","then","res","json","data","Navigation","children","LoginPage","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","showError","setShowError","placeholder","value","onChange","e","target","type","login","undefined","setToken","ActivatePage","searchString","location","search","urlParameters","URLSearchParams","get","setUid","activateUser","CustomerDetail","customers","setCustomers","customerId","match","params","getCustomerList","results","handleDeleteCustomer","deleteCustomer","map","customer","index","parseInt","key","name","organisationNr","vatNr","reference","paymentTerm","website","phoneNumber","validateCustomerInputs","length","startsWith","test","slice","EditCutomerDetail","setName","setOrganisationNr","setVatNr","setReference","setPaymentTerm","setWebsite","setPhoneNumber","setEmail","defaultValue","updateCustomer","setEditCustomer","CustomerDetailPage","editCustomer","CustomerForm","fetchCustomerList","setShowCreateDiv","inputArr","inputItem","setValue","createCustomer","HomePage","showCreateDiv","Provider","to","RegisterPage","setFirstName","setLastName","setPassword","setOrganisationName","setOrganisationKind","registerd","setRegisterd","validateRegisterInputs","register","ProfilePage","App","path","render","Boolean","window","hostname","ReactDOM","StrictMode","baseLine","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.72a5004d.chunk.js","sourcesContent":["\r\nimport React, { createContext } from \"react\";\r\n\r\nexport const CustomerContext = createContext({});","\r\nimport React, { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext({});","const ROOT_URL = \"https://frebi.willandskill.eu/\"\r\nexport default class {\r\n    \r\n    async register(firstName, lastName, email, password, organisationName, organisationKind){\r\n        const url  = `${ROOT_URL}auth/users/`\r\n        const payload = {\r\n            firstName, lastName, email, password, organisationName, organisationKind\r\n        }\r\n        fetch(url, {\r\n            method: \"POST\",\r\n            headers: this.getPuplicHeaders(),\r\n            body: JSON.stringify(payload)\r\n        })\r\n    }\r\n\r\n    async activateUser(uid, token){\r\n        const url = `${ROOT_URL}auth/users/activate/`\r\n        const payload = {uid, token}\r\n        \r\n        return  fetch(url, { \r\n                method: \"POST\",\r\n                headers: this.getPuplicHeaders(),\r\n                body: JSON.stringify(payload)\r\n            })\r\n        \r\n    }\r\n\r\n    async login(email, password) {\r\n        const url = `${ROOT_URL}api-token-auth/`\r\n        const payload = {email, password}\r\n        return fetch(url, {\r\n            method: \"POST\",\r\n            headers: this.getPuplicHeaders(),\r\n            body: JSON.stringify(payload)\r\n        })\r\n    }\r\n\r\n    async getUserInfo() {\r\n        const url= `${ROOT_URL}api/v1/me`\r\n        return fetch(url, {\r\n            headers: this.getPrivateHeaders()\r\n        }) \r\n    }\r\n\r\n    async getCustomerList() {\r\n        const url= `${ROOT_URL}api/v1/customers`\r\n        return fetch(url, {\r\n            headers: this.getPrivateHeaders()\r\n        })\r\n        \r\n    }\r\n\r\n    async getCustomerDetail(id) {\r\n        const url= `${ROOT_URL}api/v1/customers/${id}/`\r\n        return fetch(url, {\r\n            headers: this.getPrivateHeaders()\r\n        })\r\n    }\r\n\r\n    createCustomer(payload) {\r\n       const url = `${ROOT_URL}api/v1/customers`\r\n        return fetch(url, { //tog bort return innan\r\n            method: \"POST\",\r\n            headers: this.getPrivateHeaders(),\r\n            body: JSON.stringify(payload) \r\n        })\r\n    }\r\n\r\n    updateCustomer(payload, id) {\r\n        const url = `${ROOT_URL}api/v1/customers/${id}/`\r\n        return fetch(url, {\r\n            method: \"PUT\",\r\n            headers: this.getPrivateHeaders(),\r\n            body: JSON.stringify(payload)\r\n        })\r\n    }\r\n\r\n    async deleteCustomer(id) {\r\n        const url = `${ROOT_URL}api/v1/customers/${id}/`\r\n        return fetch(url, {\r\n            method: \"DELETE\",\r\n            headers: this.getPrivateHeaders()\r\n        })\r\n    }\r\n\r\n    getPuplicHeaders() {\r\n        return {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n \r\n    }\r\n\r\n    getPrivateHeaders() {\r\n        return {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${this.getToken()}`\r\n        }\r\n \r\n    }\r\n\r\n    setToken(token) {\r\n        localStorage.setItem(\"BUISINESS_TOKEN\", token)\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem(\"BUISINESS_TOKEN\")\r\n    }\r\n\r\n    deleteToken() {\r\n        localStorage.removeItem(\"BUISINESS_TOKEN\")\r\n    }\r\n    \r\n}","import React from 'react'\r\nimport styled from \"styled-components\"\r\n\r\n\r\nexport const MainDiv = styled.div `\r\nbackground-color: rgb(240, 241, 245);\r\nheight: 100vh;\r\n`\r\nexport const H1 = styled.h1 `\r\n    color: white;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`\r\n\r\nexport const H2 = styled.h2 `\r\nfont-size: 20px;\r\ncolor: grey;\r\nfont-size: 35px;\r\nfont-family: Arial, Helvetica, sans-serif;\r\n\r\n`\r\n\r\nexport const DivCenterColumn = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-content: center;\r\njustify-items: center;\r\nalign-items: center;\r\ntext-align: center;\r\nborder-radius: 10px;\r\npadding: 5px;\r\nmargin-bottom: 10px;\r\nbackground: ${props => props.white ? \"white\" : \"\"};\r\nmargin-top: ${props => props.marginTop ? \"100px\" : \"0px\"}\r\n\r\n\r\n`\r\nexport const Input =  styled.input `\r\nborder: none;\r\nborder-bottom: 1px grey solid;\r\npadding: 1%;\r\nmargin: 20px;\r\ntext-align: center;\r\nfont-size: 16px;\r\nborder-radius: 10px;\r\ncolor:#8ab7ff;\r\n&:focus{\r\n    outline: none;\r\n`\r\n\r\nexport const Button = styled.button `\r\nborder: none;\r\npadding: 5px 15px ;\r\nmargin-top: 3%;\r\nborder-radius: 10px;\r\ncolor: white;\r\nbackground-color: rgb(117, 164, 240);\r\ncursor: pointer;\r\n&:hover{\r\n    background-color: #8ab7ff;\r\n    color: white;\r\n`\r\n\r\nexport const NavDiv = styled(DivCenterColumn) `\r\nflex-direction: row;\r\njustify-content: space-evenly;\r\nbackground: rgb(72,131,226);\r\nbackground: linear-gradient(90deg, rgba(138,183,255,1) 0%, rgba(90,90,232,1) 34%, rgba(40,171,141,1) 100%);\r\nborder-radius: 0px;\r\n\r\n`\r\n\r\n\r\nexport const DivCenterRow = styled(DivCenterColumn) `\r\nflex-direction: row;\r\nwidth: 200px;\r\njustify-content: space-between;\r\nmargin-left: 12%;\r\n`\r\nexport const UserDiv = styled(DivCenterColumn) `\r\nbackground-color: white;\r\nfont-size: 15px;\r\npadding: 10px;\r\nborder-radius: 10px;\r\nmargin-right: 20px;\r\nmargin-left: -20px;\r\n&:hover{\r\n    background-color: #8ab7ff;\r\n    color: white;\r\n`\r\n\r\nexport const NavButton = styled(Button) `\r\nbackground-color: white;\r\ncolor: #8ab7ff;\r\nmargin: 3%;\r\n`\r\n\r\nexport const UserLI = styled.li `\r\nfont-family: Arial, Helvetica, sans-serif;\r\nfont-size: 13px;\r\nlist-style-type: none;\r\n`\r\n\r\nexport const A = styled.a `\r\ntext-decoration: none;\r\n`\r\n\r\n/*****************************HOME****************************** */\r\n\r\nexport const CustomerLI =  styled.li `\r\nmargin: 5px;\r\n\r\npadding: 5px;\r\nlist-style-type: none;\r\nfont-size: 15px;\r\ncolor: white;\r\nfont-family: Arial, Helvetica, sans-serif;\r\nborder-bottom: 1px solid #5a5ae8;\r\n\r\n\r\n`\r\n\r\nexport const CustomerUL =  styled.ul `\r\nmargin: 10px;\r\npadding: 15px;\r\ndisplay: grid;\r\nbackground: #8ab7ff;\r\ngrid-template-columns: 3fr, 3fr, 3fr;\r\nborder-radius: 10px;\r\n`\r\n\r\n\r\nexport const DivCustomerGrid = styled.div `\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr 1fr;\r\nbackground: white;\r\nborder-radius: 10px;\r\npadding: 10px;\r\n\r\n`\r\nexport const ShowCreateDiv = styled.div `\r\nbackground-color: #5a5ae8;\r\nfont-size: 40px;\r\nfont-weight: bolder;\r\nborder-radius: 50px;\r\nwidth: 50px;\r\nheight: 50px;\r\ncolor: white;\r\ncursor: pointer;\r\nmargin-bottom: 20px;\r\n&:hover{\r\n    background: radial-gradient(circle, rgba(90,90,232,1) 0%, rgba(40,171,141,1) 100%);\r\n    \r\n    \r\n\r\n`\r\n\r\nexport const CreateCustomerDiv = styled(DivCenterColumn) `\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr;\r\nbackground-color: white;\r\npadding: 10px;\r\nborder-radius: 10px;\r\nmargin: 10px;\r\n\r\n`\r\n\r\nexport const H4 = styled.h4 `\r\nmargin: 5px;\r\nfont-size: 20px;\r\nfont-family: Arial, Helvetica, sans-serif;\r\ncolor: ${props => props.white ? \"white\" : \"#5a5ae8;\"};\r\n`\r\n\r\nexport const CreateCustomerInput = styled(Input) `\r\nbackground-color: light-grey;\r\nmargin: 10px;\r\ncolor: #5a5ae8;\r\nborder-radius: 0px;\r\n&:focus{\r\n    outline: none;\r\n`\r\n\r\nexport const CreateCustomerButton = styled(Button) `\r\nbackground: radial-gradient(circle, rgba(90,90,232,1) 0%, rgba(40,171,141,1) 100%);\r\ncolor: white;\r\nmargin: 0px;\r\n&:hover{\r\n    background: radial-gradient(circle, rgba(40,171,141,1) 0%, rgba(90,90,232,1) 100%);\r\n\r\n`\r\n\r\n/****************************LOGIN************************ */\r\n\r\nexport const LoginButton = styled(Button) `\r\n\r\nwidth: 100px;\r\n`\r\n\r\n/***********************Activate user******************* */\r\n\r\nexport const BigButton = styled(Button) `\r\nwidth: 150px;\r\nfont-size: 20px;\r\nmargin-top: 30px;\r\n\r\n&:hover{\r\nbackground-color: rgb(151, 219, 182);\r\n\r\n}\r\n`\r\n\r\nexport const P = styled.p `\r\nfont-size: 15px;\r\ncolor: ${props => props.warning ? \"red\" : \"black\"};\r\nfont-family: Arial, Helvetica, sans-serif;\r\n`\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NavButton} from \"./styles\"\r\n\r\n\r\nexport default function LoginButton() {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <NavButton onClick={() => {history.push(\"/login\")}}>Login</NavButton>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NavButton} from \"./styles\"\r\n\r\n\r\nexport default function LogoutButton() {\r\n    const history = useHistory()\r\n    function logout() {\r\n        localStorage.clear()\r\n        history.push(\"/login\")\r\n    }\r\n    return (\r\n        \r\n        <NavButton onClick={logout}>Logout</NavButton>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { NavButton} from \"./styles\"\r\n\r\n\r\nexport default function HomeButton() {\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            <NavButton onClick={() => {history.push(\"/home\")}}>Home</NavButton>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useContext} from 'react'\r\n//import {Link} from \"react-router-dom\"\r\nimport UserKit from '../data/UserKit'\r\nimport { UserDiv, UserLI, A} from \"./styles\"\r\nimport {UserContext} from \"../contexts/UserContext\"\r\n\r\nexport default function UserBox() {\r\n    const userKit = new UserKit()\r\n    const {userInfo, setUserInfo} = useContext(UserContext)\r\n\r\n    function getUserInfo() {\r\n        userKit.getUserInfo()\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUserInfo(data)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserInfo()\r\n    }, [])\r\n\r\n    return (\r\n        // <UserContext.Provider value={{firstName, setFirstName, lastName, setLastName, email, setEmail}}>\r\n        <A href=\"/profile\">\r\n        <UserDiv>\r\n            <UserLI>{userInfo.firstName} {userInfo.lastName}</UserLI>\r\n            <UserLI>{userInfo.email}</UserLI>\r\n        </UserDiv>\r\n        </A>\r\n        // </UserContext.Provider>\r\n    )\r\n}\r\n","import React, { Children } from 'react'\r\nimport UserKit from '../data/UserKit'\r\nimport LoginButton from './LoginButton'\r\nimport LogoutButton from './LogoutButton'\r\nimport HomeButton from \"./HomeButton\"\r\nimport {H1, NavDiv, DivCenterRow, DivCenterColumn} from \"../components/styles\"\r\nimport UserBox from './UserBox'\r\n\r\n\r\nexport default function Navigation({children}) {\r\nconst userKit = new UserKit()\r\n\r\n\r\n    return (\r\n        <div>\r\n        <NavDiv>\r\n            <H1>Business Project</H1>\r\n            <DivCenterRow>\r\n            {userKit.getToken() == null ? \"\" : <UserBox/>}\r\n\r\n            <DivCenterColumn>\r\n            {userKit.getToken() == null ? \"\" : <HomeButton/>}\r\n            {userKit.getToken() == null ? <LoginButton/> : <LogoutButton/>\r\n            }\r\n            \r\n            </DivCenterColumn>\r\n            </DivCenterRow>\r\n\r\n        </NavDiv>\r\n        {children}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport UserKit from '../data/UserKit'\r\nimport {DivCenterColumn, H2, LoginButton, CreateCustomerInput, NavButton, P} from \"../components/styles\"\r\n\r\nexport default function LoginPage() {\r\n\r\n    const [loginEmail, setLoginEmail] = useState(\"\")\r\n    const [loginPassword, setLoginPassword] = useState(\"\")\r\n    const [showError, setShowError] = useState(null)\r\n    \r\n    const userKit = new UserKit()\r\n    const history = useHistory()\r\n\r\n    function handleLogin () {\r\n        userKit.login(loginEmail, loginPassword)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.token === undefined) {return setShowError(\"Wrong input, please try again\")}\r\n          userKit.setToken(data.token)\r\n          history.push(\"/home\")\r\n        }) \r\n        \r\n    }\r\n\r\n    function handlePushRegister() {history.push(\"/\")}\r\n\r\n    return (\r\n        <DivCenterColumn marginTop white>\r\n            <H2>Login</H2>\r\n            <CreateCustomerInput placeholder=\"email\" value={loginEmail} onChange={e => setLoginEmail(e.target.value)}/>\r\n            <CreateCustomerInput type=\"password\" placeholder=\"password\" value={loginPassword} onChange={e => setLoginPassword(e.target.value)}/>\r\n            {showError && <P warning>{showError}</P>}\r\n            <LoginButton onClick={handleLogin}>Login</LoginButton>\r\n            <NavButton onClick={handlePushRegister}>Register</NavButton>\r\n        </DivCenterColumn>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UserKit from '../data/UserKit'\r\nimport LoginPage from './LoginPage'\r\nimport  {DivCenterColumn, H4, BigButton} from \"../components/styles\"\r\n\r\nexport default function ActivatePage() {\r\n\r\n    const userKit = new UserKit()\r\n    const history = useHistory()\r\n    const searchString = history.location.search\r\n    const urlParameters = new URLSearchParams(searchString)\r\n\r\n    const [uid, setUid] = useState(urlParameters.get(\"uid\"))\r\n    const [token, setToken] = useState(urlParameters.get(\"token\"))\r\n\r\n    function handleActivateUser() {\r\n        userKit.activateUser(uid, token)\r\n        .then(() => {\r\n        setUid(null)\r\n        setToken(null)\r\n          history.push(\"/login\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <DivCenterColumn>\r\n        {token ? (\r\n            <DivCenterColumn marginTop>\r\n            <H4>Activate Account</H4>\r\n            <BigButton onClick={handleActivateUser}>Activate user</BigButton>\r\n            </DivCenterColumn>\r\n          ) : (\r\n          <LoginPage/>\r\n          )}\r\n          </DivCenterColumn>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useContext} from 'react'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport UserKit from '../data/UserKit'\r\nimport { CustomerLI, DivCenterColumn, Button, H4 } from '../components/styles'\r\nimport {CustomerContext} from \"../contexts/CustomerContext\"\r\n\r\nexport default function CustomerDetail(props) {\r\n    const history = useHistory()\r\n    const userKit = new UserKit()\r\n    const {customers, setCustomers} = useContext(CustomerContext)\r\n    const customerId = props.match.params.id\r\n\r\n    function getCustomerList() {\r\n        userKit.getCustomerList()\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setCustomers(data.results)\r\n        })\r\n    }\r\n\r\n    if (customers === null) {\r\n        getCustomerList()\r\n    }\r\n\r\n    function handleDeleteCustomer() {\r\n        userKit.deleteCustomer(customerId)\r\n        .then(getCustomerList())\r\n        .then(history.push(\"/home\"))\r\n    }\r\n\r\n    return (\r\n        customers && customers.map((customer, index) => {\r\n            if (parseInt(customer.id) === parseInt(customerId)) {\r\n                return (\r\n                    \r\n                    <DivCenterColumn key={index}>\r\n                        <CustomerLI><H4 white>{customer.name}</H4></CustomerLI>\r\n                        <CustomerLI>Organisation number: {customer.organisationNr}</CustomerLI>\r\n                        <CustomerLI>Vat number: {customer.vatNr}</CustomerLI>\r\n                        <CustomerLI>Reference: {customer.reference}</CustomerLI>\r\n                        <CustomerLI>Payement term: {customer.paymentTerm}</CustomerLI>\r\n                        <CustomerLI>Website: {customer.website}</CustomerLI>\r\n                        <CustomerLI>Phone number: {customer.phoneNumber}</CustomerLI>\r\n                        <CustomerLI>Email: {customer.email}</CustomerLI>\r\n                        <Button onClick={handleDeleteCustomer}>Delete customer</Button>\r\n                    </DivCenterColumn>\r\n                )\r\n            }  \r\n        })   \r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport function validateCustomerInputs (vatNr, setShowError, paymentTerm,name, reference, organisationNr) {\r\n    if (name ===\"\") {return setShowError(\"Enter name\") }\r\n\r\n    if (organisationNr ===\"\") {return setShowError(\"Enter organisationNr\")}\r\n\r\n    if (reference ===\"\") {return setShowError(\"Enter reference\")}\r\n    \r\n    if (vatNr ===\"\"  || vatNr.length !== 12 || \r\n        vatNr.startsWith(\"SE\") === false ||  \r\n        /^\\d+$/.test(vatNr.slice(2,12)) === false) {\r\n        \r\n            return setShowError(\"Wrong vatNr. Ex. SE1234567890\")\r\n    }\r\n\r\n    if (paymentTerm ===\"\" || /^\\d+$/.test(paymentTerm) ===false) {\r\n        \r\n        return setShowError(\"Payment term has to be a number\")\r\n    }\r\n\r\n    return true;\r\n    \r\n}\r\n\r\n\r\nexport function validateRegisterInputs (setShowError, email, password, organisationKind) {\r\n\r\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    if (email ===\"\" || emailValidation.test(email) === false) {return setShowError(\"Enter valid email\")}\r\n\r\n    if (password ===\"\" || password.length < 8 || /[a-zA-z-]/.test(password) === false || /\\d/.test(password)=== false) {\r\n        return setShowError(\"Password should consist of letters and numbers and be at least 8 characters\")}\r\n    \r\n    if (organisationKind ===\"\" || /[0-2]/.test(organisationKind)=== false) {return setShowError(\"Enter organisation kind (0-2)\")}\r\n\r\n    return true;\r\n    \r\n}\r\n\r\n","import React, {useState, useContext, useEffect} from 'react'\r\nimport {Input, DivCenterColumn, Button, P} from \"./styles\"\r\nimport {CustomerContext} from \"../contexts/CustomerContext\"\r\nimport UserKit from '../data/UserKit'\r\nimport {validateCustomerInputs} from \"./validation\"\r\n\r\nexport default function EditCutomerDetail(props) {\r\n    const {customers, setCustomers} = useContext(CustomerContext)\r\n    const userKit = new UserKit()\r\n    const customerId = props.match.params.id\r\n    const [name , setName] = useState(\"\")\r\n    const [organisationNr , setOrganisationNr] = useState(\"\")\r\n    const [vatNr , setVatNr] = useState(\"\")\r\n    const [reference , setReference] = useState(\"\")\r\n    const [paymentTerm , setPaymentTerm] = useState(\"\")\r\n    const [website , setWebsite] = useState(\"\")\r\n    const [phoneNumber , setPhoneNumber] = useState(\"\")\r\n    const [email\t, setEmail] = useState(\"\")\r\n    \r\n    const [showError, setShowError] = useState(null)\r\n\r\n    useEffect(() => {getCustomer()}, [])\r\n\r\n    function getCustomer() {\r\n        customers.map(customer => {\r\n            if (parseInt(customer.id) === parseInt(customerId)) {\r\n                setName(customer.name)\r\n                setOrganisationNr(customer.organisationNr)\r\n                setVatNr(customer.vatNr)\r\n                setReference(customer.reference)\r\n                setPaymentTerm(customer.paymentTerm)\r\n                setWebsite(customer.website)\r\n                setPhoneNumber(customer.phoneNumber)\r\n                setEmail(customer.email)   \r\n            }\r\n        })\r\n    }\r\n\r\n    function getCustomerList() {\r\n        userKit.getCustomerList()\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setCustomers(data.results)\r\n        })\r\n    }\r\n\r\n    function handleUpdateCustomer() {\r\n            if(validateCustomerInputs(vatNr, setShowError, paymentTerm, name, reference, organisationNr)) {\r\n\r\n            const payload = {\r\n                name: name,\r\n                organisationNr: organisationNr,\r\n                vatNr: vatNr,\r\n                reference: reference,\r\n                paymentTerm: paymentTerm,\r\n                website: website,\r\n                phoneNumber: phoneNumber,\r\n                email: email\r\n            }\r\n            userKit.updateCustomer(payload, customerId)\r\n            .then(getCustomerList)\r\n            setShowError(null)\r\n            props.setEditCustomer(false)\r\n        }  \r\n    }\r\n\r\n    return (       \r\n            <DivCenterColumn>\r\n                <Input type=\"text\" defaultValue={name}  onChange ={(e => {setName(e.target.value)})} placeholder=\"name\"/>\r\n                <Input type=\"text\" defaultValue={organisationNr} onChange ={(e => {setOrganisationNr(e.target.value)})} placeholder=\"organisationNr\" />\r\n                <Input type=\"text\" defaultValue={vatNr} onChange ={(e => {setVatNr(e.target.value)})} placeholder=\"vatNr\"/>\r\n                <Input type=\"text\" defaultValue={reference} onChange ={(e => {setReference(e.target.value)})} placeholder=\"reference\"/>\r\n                <Input type=\"text\" defaultValue={paymentTerm} onChange ={(e => {setPaymentTerm(e.target.value)})} placeholder=\"paymentTerm\"/>\r\n                <Input type=\"text\" defaultValue={website} onChange ={(e => {setWebsite(e.target.value)})} placeholder=\"website\"/>\r\n                <Input type=\"text\" defaultValue={phoneNumber} onChange ={(e => {setPhoneNumber(e.target.value)})} placeholder=\"phoneNumber\"/>\r\n                <Input type=\"text\" defaultValue={email} onChange ={(e => {setEmail(e.target.value)})} placeholder=\"email\"/>\r\n                <Button onClick={handleUpdateCustomer}>Update</Button>\r\n                {showError && <P warning>{showError}</P>}\r\n            </DivCenterColumn>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { DivCenterColumn, Button, CustomerUL } from '../components/styles'\r\nimport CustomerDetail from \"../components/CustomerDetail\"\r\nimport EditCutomerDetail from '../components/EditCutomerDetail'\r\n\r\nexport default function CustomerDetailPage(props) {\r\n    const [editCustomer, setEditCustomer] = useState(false)\r\n\r\n    return (\r\n        <DivCenterColumn marginTop>\r\n            <CustomerUL>\r\n            {editCustomer === true ? <EditCutomerDetail {...props} setEditCustomer={setEditCustomer}/> : <CustomerDetail {...props}/> }\r\n            {editCustomer === false ? <Button onClick={() => {setEditCustomer(true)}}>Edit customer</Button> : \"\"}\r\n            </CustomerUL>\r\n        </DivCenterColumn>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport UserKit from '../data/UserKit'\r\nimport {CreateCustomerDiv, H4, CreateCustomerInput, CreateCustomerButton, P, DivCenterColumn} from \"./styles\"\r\nimport {validateCustomerInputs} from \"./validation\"\r\n\r\nexport default function CustomerForm({fetchCustomerList, setShowCreateDiv}) {\r\n\r\n    const userKit = new UserKit()\r\n    const [name , setName] = useState(\"\")\r\n    const [organisationNr , setOrganisationNr] = useState(\"\")\r\n    const [vatNr , setVatNr] = useState(\"\")\r\n    const [reference , setReference] = useState(\"\")\r\n    const [paymentTerm , setPaymentTerm] = useState(\"\")\r\n    const [website , setWebsite] = useState(\"\")\r\n    const [phoneNumber , setPhoneNumber] = useState(\"\")\r\n    const [email\t, setEmail] = useState(\"\")\r\n\r\n    const [showError, setShowError] = useState(null)\r\n\r\n    const inputArr = [\r\n        [\"name\", name, setName, \"text\"],\r\n        [\"organisationNr\", organisationNr, setOrganisationNr, \"text\"],\r\n        [\"vatNr\", vatNr, setVatNr, \"text\"],\r\n        [\"reference\", reference, setReference, \"text\"],\r\n        [\"paymentTerm\", paymentTerm, setPaymentTerm, \"text\"],\r\n        [\"website\", website, setWebsite, \"text\"],\r\n        [\"phoneNumber\", phoneNumber, setPhoneNumber, \"text\"],\r\n        [\"email\", email, setEmail, \"email\"] \r\n        ]\r\n\r\n    function renderInput(key, placeholder, value, setValue, type) {\r\n        return (\r\n            <div key={key}>\r\n                <CreateCustomerInput type={type} placeholder={placeholder} value={value} onChange ={(e => {setValue(e.target.value)})}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function addCustomer() { \r\n        if(validateCustomerInputs(vatNr, setShowError, paymentTerm, name, reference, organisationNr)){\r\n\r\n            const payload = {\r\n                name: name,\r\n                organisationNr: organisationNr,\r\n                vatNr: vatNr,\r\n                reference: reference,\r\n                paymentTerm: paymentTerm,\r\n                website: website,\r\n                phoneNumber: phoneNumber,\r\n                email: email\r\n            }\r\n            userKit.createCustomer(payload)\r\n            .then(fetchCustomerList)            \r\n        }\r\n \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DivCenterColumn white>\r\n            \r\n                    <H4>Create Customer</H4>\r\n                    <CreateCustomerDiv>\r\n                    {inputArr.map((inputItem, index) => {\r\n                        return renderInput(index, inputItem[0], inputItem[1], inputItem[2], inputItem[3])\r\n                    })}\r\n                    </CreateCustomerDiv>\r\n                    {showError && <P warning>{showError}</P>}\r\n                    <CreateCustomerButton onClick={addCustomer}>Create Customer</CreateCustomerButton>\r\n                \r\n                </DivCenterColumn>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState, useContext} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport UserKit from '../data/UserKit'\r\nimport {H2, DivCenterColumn, CustomerLI, CustomerUL, ShowCreateDiv, DivCustomerGrid} from \"../components/styles\"\r\nimport {CustomerContext} from \"../contexts/CustomerContext\"\r\nimport CustomerForm from '../components/CustomerForm'\r\n\r\nexport default function HomePage() {\r\n  const userKit = new UserKit()\r\n\r\n  const [showCreateDiv, setShowCreateDiv] = useState(false)\r\n  const {customers, setCustomers} = useContext(CustomerContext)\r\n\r\n    useEffect(() => {\r\n        fetchCustomerList()\r\n    }, [])\r\n\r\n    function fetchCustomerList() {\r\n        userKit.getCustomerList() \r\n        .then(res => res.json())\r\n        .then(data => setCustomers(data.results))\r\n    }\r\n\r\n    function handleShowCreateDiv() {\r\n        showCreateDiv === false ? setShowCreateDiv(true) : setShowCreateDiv(false);\r\n    }\r\n\r\n    function renderCustomerList(){\r\n        return(\r\n            <DivCenterColumn>\r\n            <DivCustomerGrid>\r\n            {customers && customers.map((customer, index) => {\r\n                \r\n                return <CustomerUL key={customer.id}>\r\n                    \r\n                    <CustomerLI><Link to={`/customers/${customer.id}`}>{customer.name}</Link></CustomerLI>\r\n                    <CustomerLI>{customer.organisationNr}</CustomerLI>\r\n                    <CustomerLI>{customer.reference}</CustomerLI>\r\n                    \r\n                    </CustomerUL>\r\n            })\r\n            }\r\n            </DivCustomerGrid>\r\n        </DivCenterColumn>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <CustomerContext.Provider value={{customers, setCustomers}}>\r\n        <DivCenterColumn>\r\n            <H2>Customers</H2>\r\n            <ShowCreateDiv onClick={handleShowCreateDiv}>\r\n            {showCreateDiv === true ? \"𝙭\" : \"+\"}\r\n            </ShowCreateDiv>\r\n            \r\n            {showCreateDiv === true ?\r\n                <CustomerForm fetchCustomerList={fetchCustomerList} setShowCreateDiv= {setShowCreateDiv}/>\r\n            : \"\"\r\n            }\r\n            {renderCustomerList()}\r\n        </DivCenterColumn>\r\n        </CustomerContext.Provider>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport UserKit from '../data/UserKit'\r\nimport {H2, DivCenterColumn, CreateCustomerInput, Button, P} from \"../components/styles\"\r\nimport  {validateRegisterInputs} from \"../components/validation\"\r\n\r\n\r\nexport default function RegisterPage() {\r\n\r\n    const userKit = new UserKit();\r\n\r\n    const [showError, setShowError] = useState(null)\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [organisationName, setOrganisationName] = useState(\"\")\r\n    const [organisationKind, setOrganisationKind] = useState(\"\")\r\n    const [registerd, setRegisterd] = useState(null)\r\n\r\n\r\n    function register () {\r\n        if (validateRegisterInputs(setShowError, email, password, organisationKind)) {\r\n        userKit.register(\r\n            firstName, \r\n            lastName, \r\n            email, \r\n            password, \r\n            organisationName, \r\n            organisationKind\r\n        ).then(setRegisterd(true))\r\n         setShowError(null)\r\n        }\r\n    }\r\n\r\n    const inputArr = [\r\n        [\"First Name\", firstName, setFirstName, \"text\"],\r\n        [\"Last Name\", lastName, setLastName, \"text\"],\r\n        [\"Email\", email, setEmail, \"email\"],\r\n        [\"Password\", password, setPassword, \"password\"],\r\n        [\"Organisation Name\", organisationName, setOrganisationName, \"text\"],\r\n        [\"Organisation Kind\", organisationKind, setOrganisationKind, \"number\"], \r\n    ]\r\n\r\n    function renderInput(key, placeholder, value, setValue, type) {\r\n        return (\r\n            <div key={key}>\r\n                <CreateCustomerInput type={type} placeholder={placeholder} value={value} onChange ={(e => {setValue(e.target.value)})}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <DivCenterColumn marginTop white>\r\n            <H2>Register Page</H2>\r\n            <P>Enter details to register</P>\r\n            {inputArr.map((inputItem, index) => {\r\n                return renderInput(index, inputItem[0], inputItem[1], inputItem[2], inputItem[3])\r\n            })}\r\n            {registerd && <P>A link has been sent to your email</P>}\r\n            {showError && <P warning>{showError}</P>}\r\n\r\n            <Button onClick={register}>Register</Button>\r\n\r\n        </DivCenterColumn>\r\n    )\r\n}\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport UserKit from '../data/UserKit'\r\nimport {CustomerLI, DivCenterColumn, H4} from \"../components/styles\"\r\nimport {UserContext} from \"../contexts/UserContext\"\r\nimport { CustomerUL } from '../components/styles'\r\n\r\nexport default function ProfilePage() {\r\n    const userKit = new UserKit()\r\n    const {userInfo, setUserInfo} = useContext(UserContext)\r\n\r\n    function getUserInfo() {\r\n        userKit.getUserInfo()\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUserInfo(data)    \r\n        })\r\n    }\r\n    if (userInfo === null) {\r\n        getUserInfo()\r\n    }\r\n\r\n    return(\r\n        <DivCenterColumn marginTop>\r\n            <CustomerUL>\r\n                <CustomerLI><H4>{userInfo.firstName} {userInfo.lastName}</H4></CustomerLI>\r\n                <CustomerLI>Email: {userInfo.email}</CustomerLI>\r\n                <CustomerLI>Organisation name:{userInfo.organisationName}</CustomerLI>\r\n                <CustomerLI>Organisation kind: {userInfo.organisationKind}</CustomerLI>\r\n            </CustomerUL>\r\n        </DivCenterColumn>\r\n    )\r\n\r\n}","import React, { useState } from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\nimport { CustomerContext } from \"./contexts/CustomerContext\";\nimport {UserContext } from \"./contexts/UserContext\";\nimport Navigation from \"./components/Navigation\"\nimport ActivatePage from \"./pages/ActivatePage\"\nimport CustomerDetailPage from \"./pages/CustomerDetailPage\"\nimport HomePage from \"./pages/HomePage\"\nimport RegisterPage from \"./pages/RegisterPage\"\nimport ProfilePage from \"./pages/ProfilePage\";\nimport {MainDiv} from \"./components/styles\"\n\nfunction App() {\n  const [customers, setCustomers] = useState(null);\n  const [userInfo, setUserInfo] = useState({})\n\n  return (\n    <MainDiv>\n      <CustomerContext.Provider value={{customers, setCustomers}}>\n      <UserContext.Provider value={{userInfo, setUserInfo}}>\n\n\n    <Switch>\n\n      <Route \n      path=\"/customers/:id\" \n      render={(props) => {\n        return (\n          <Navigation>\n            <CustomerDetailPage {...props}/>\n          </Navigation>\n          \n        )\n      }}></Route>\n\n        <Route path=\"/home\">\n          <Navigation>\n            <HomePage/>\n          </Navigation> \n        </Route>\n        \n      <Route path=\"/login\">\n        <Navigation>\n        <ActivatePage/>\n        </Navigation>\n      </Route>\n\n      <Route path=\"/profile\">\n        <Navigation>\n          <ProfilePage/>\n        </Navigation>\n      </Route>\n\n        <Route path=\"/\">\n          <Navigation>\n            <RegisterPage/>\n          </Navigation>\n        </Route>\n\n\n    </Switch>\n      </UserContext.Provider>\n      </CustomerContext.Provider>\n    </MainDiv>\n  )\n}\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter baseLine=\"/buisness-js3\">\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}